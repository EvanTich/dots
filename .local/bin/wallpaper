#!/bin/sh

# Sets the wallpaper using feh.

CACHE_FILE="$XDG_DATA_HOME/wallpaper-cache"
CACHE_SIZE=10

# TODO: add cache file option, cache size option, simulate run option
# TODO: fix issue when cache is full and all files in folder are in it
# TODO: make getwallpaper look pretty
# TODO: make sure given file argument is image

setwallpaper() {
    # set given wallpaper from path, add path to cache
    feh --bg-max "$@" &
    # echo "wallpapers that would have been set: $@"

    for path in "$@"; do
        echo "$(realpath "$path")" >> "$CACHE_FILE"
    done

    if [[ $(cat "$CACHE_FILE" | wc -l) -gt CACHE_SIZE ]]; then
        tail -n $CACHE_SIZE "$CACHE_FILE" > "$CACHE_FILE.tmp"
        mv "$CACHE_FILE.tmp" "$CACHE_FILE"
    fi
}

pickwallpaper() {
    # get wallpaper, ensure wallpaper path is not in the cache
    num=$(($CACHE_SIZE + $1))
    while read file; do
        # the percent chance to get
        path=`realpath "$file"`
        if ! grep "$path" "$CACHE_FILE" && file -b --mime-type "$path" | grep "image"; then
            wallpapers+=("$path")
            [[ ${#wallpapers[@]} -eq $1 ]] && break
        fi
    done < <(find "$2" -type f | shuf -n $num) >/dev/null
}

getwallpaper() {
    cat "$CACHE_FILE"
}

while getopts "sgh" o; do
    case "${o}" in
        h) echo "Pass the directory to the wallpapers or any amount of files as parameters." && exit 1 ;;
        g) getwallpaper && exit 0 ;;
        s) setup && exit 0 ;;
    esac
done

# if number of arguments is 0
if [[ $# -eq 0 ]]; then
    echo "No argument provided."
    exit 1
fi

if [ -d "$1" ]; then
    # pick random wallpaper(s) from the given folder

    # # of wallpapers to pick = number of screens
    n=$(xrandr --listmonitors | grep 'Monitors' | awk {'print $2'})

    declare -a wallpapers=()
    pickwallpaper $n "$1"
    setwallpaper "${wallpapers[@]}"
elif [ -f "$1" ]; then
    # wallpaper path provided and file exists
    setwallpaper "$@"
fi
