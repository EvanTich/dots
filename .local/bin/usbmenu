#!/bin/sh

# Gives a dmenu prompt to mount and unmount drives.
# If they're in /etc/fstab, they'll be mounted automatically. Otherwise, you'll
# be prompted to give a mountpoint from already existsing directories. If you
# input a novel directory, it will prompt you to create that directory.
# Unmounting provides you with mounted partitions, select one to unmount.
# Drives mounted at /, /boot and /home will not be options to unmount.
# Combination of Voidrice's dmenumount and dmenuumount with only the USB options.

getmount() {
	[ -z "$chosen" ] && exit 1
	mp="$(find $1 2>/dev/null | dmenu -i -p "Type in mount point.")" || exit 1
	test -z "$mp" && exit 1
	if [ ! -d "$mp" ]; then
		mkdiryn=$(printf "No\\nYes" | dmenu -i -p "$mp does not exist. Create it?") || exit 1
		[ "$mkdiryn" = "Yes" ] && (mkdir -p "$mp" || sudo -A mkdir -p "$mp")
	fi
}

mountusb() {
	drives="$(lsblk -rpo "name,type,size,mountpoint" | grep 'part\|rom' | awk '$4==""{printf "%s (%s)\n",$1,$3}')"
	[ -z "$drives" ] && echo "No USB drive detected" && exit
	chosen="$(echo "$drives" | dmenu -i -p "Mount which drive?")" || exit 1
	chosen="$(echo "$chosen" | awk '{print $1}')"
	sudo -A mount "$chosen" 2>/dev/null && notify-send "ðŸ’» USB mounting" "$chosen mounted." && exit 0
	alreadymounted=$(lsblk -nrpo "name,type,mountpoint" | awk '$3!~/\/boot|\/home$|SWAP/&&length($3)>1{printf "-not ( -path *%s -prune ) ",$3}')
	getmount "/mnt /media /mount /home -maxdepth 5 -type d $alreadymounted"
	partitiontype="$(lsblk -no "fstype" "$chosen")"
	case "$partitiontype" in
		"vfat") sudo -A mount -t vfat "$chosen" "$mp" -o rw,umask=0000;;
		"exfat") sudo -A mount "$chosen" "$mp" -o uid="$(id -u)",gid="$(id -g)";;
		*) sudo -A mount "$chosen" "$mp"; user="$(whoami)"; ug="$(groups | awk '{print $1}')"; sudo -A chown "$user":"$ug" "$mp";;
	esac
	notify-send "ðŸ’» USB mounting" "$chosen mounted to $mp."
}

unmountusb() {
	drives=$(lsblk -nrpo "name,type,size,mountpoint,label" | awk -F':' '{gsub(/ /,":")}$4!~/\/boot|\/efi|\/home$|SWAP/&&length($4)>1{printf "%s (%s) %s\n",$4,$3,$5}')
	[ -z "$drives" ] && echo "No drives to unmount." && exit
	chosen="$(echo "$drives" | dmenu -i -p "Unmount which drive?")" || exit 1
	chosen="$(echo "$chosen" | awk '{print $1}')"
	[ -z "$chosen" ] && exit
	sudo -A umount "$chosen" && notify-send "ðŸ’» USB unmounting" "$chosen unmounted."
}

asktype() {
	choice="$(printf "mount\\nunmount" | dmenu -i -p "Mount or unmount?")" || exit 1
	case $choice in
		mount) mountusb ;;
		unmount) unmountusb ;;
	esac
}

asktype
